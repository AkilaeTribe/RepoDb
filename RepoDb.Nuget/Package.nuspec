<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd">
  <metadata>
    <id>RepoDb</id>
    <version>1.8.1</version>
    <title>RepoDb</title>
    <authors>Michael Camara Pendon</authors>
    <owners>mikependon</owners>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>A dynamic, lightweight, and very fast ORM .NET Library.</description>
    <language>en-US</language>
    <releaseNotes>
    [Release 1.8.1]
    ------------------

    [New Features]
    - New: Introduced the 'ExecuteQueryMultiple' into the 'DbRepository'.
    - New: Introduced the 'QueryMultiple' into the 'DbRepository'.
    - New: Introduced the 'ConversionType' to let the users decide the type of the conversions. Accessible via 'TypeMapper.ConversionType' property.

    [Optimizations]
    - Optimization: Added a class-level checking when identifying the 'PrimaryKey' of a class.
    - Optimization: Supported the type conversions(if convertible) when querying the data from the database.
    - Optimization: Simplified the extraction of the result of the 'ExecuteQueryMultiple' via 'Extract' method.

    [Added]
    - Added: A class named 'AsyncResultExtractor' to control the extraction of the result in the caller side for all 'Async' methods of the 'BaseRepository/DbRepository'.
    - Added: A class named 'QueryMultipleRequest' to handle the request when calling the 'QueryMultiple' operation.
    - Added: A class named 'CommandArrayParameter' to hold the array parameters for Raw SQL Statements.
    - Added: A method named 'Reset' for both 'QueryField' and 'QueryGroup' objects  allow the user to reinstate the instance of that object.
    - Added: An operation named 'BulkInsert' at  'DbRepository' with 'DbDataReader' as the parameter.
    - Added: An argument named 'hints' for both the 'BatchQuery' and 'Count' operation.
    - Added: An intensive 'IntegrationTests' for all the different data types of the database (SQL Server) (Numbers, Spatials, Strings, Dates, Bytes, Others).
    - Added: An intensive 'IntegrationTests' for the data types conversions(i.e: String-to-Numbers (vice versa), String-to-Dates (vice versa), etc).
    - Added: An intensive 'IntegrationTests' for the invalid casings.
    - Added: An intensive 'IntegrationTests' for all the operations of the 'DbConnection', 'DbRepository' and 'BaseRepository' objects.

    [Fixes]
    - Fixed: An issue in the 'InlineMerge' if the primary key is not defined in the dynamic object.
    - Fixed: An issue in the 'Merge' if the primary key is an identity.
    - Fixed: An issue in the 'QueryMultiple' if the same expression is are used multiple times.

    [Release 1.8.0]
    ------------------

    [New Features]
    - Introduced the support for 'DbConnection.QueryMultiple'.
    - Introduced the support for 'DbConnection.ExecuteQueryMultiple'.

    [Added]
    - Added a class 'QueryMultipleExtractor' to manage the extraction of the result of 'DbConnection.ExecuteQueryMultiple' operation.
    - Added a class named 'CommandParameter' to handle the value of the parameter mapping into the target Type.
    - Added a class named 'QueryGroupTimeMap' to support the mapping of the QueryGroup into the Type.
    - Introduced a 'hints' argument in the 'DbConnection.Query' operation.
    - Added class 'SqlTableHints'.
    - Supported 'BulkInsert' for 'DbDataReader'.

    [Removed]
    - Removed the 'Operation.Any'.
    - Removed the 'Operation.All'.
    - Removed the 'orderBy' and 'top' argument in the 'Query' method with 'primaryKey' argument.
    - Removed the 'DbConnection.BatchQuery' method with 'primaryKey' argument.
    - Removed the 'DbConnection.Count' method with 'primaryKey' argument.
    - Removed the 'DbConnection.Delete' method without the 'where' parameter.
    - Removed the support on 'dynamic' object query tree expressions.

    [Discontinued]
    - Removed the attribute 'Command'.
    - Removed the attribute 'Ignored'.

    [Optimizations]
    - Revisits the way on how to map the 'QueryGroup' list of 'QueryField' into the data entity type.
    - Refactor the Linq (IEnumerable&lt;T&gt;.ToList()) into an old-school (foreach / for (var i..)) approach.
    </releaseNotes>
    <copyright>Copyright Â© 2018</copyright>
    <tags>orm sql repo repodb repository</tags>
    <projectUrl>https://github.com/RepoDb/RepoDb</projectUrl>
    <licenseUrl>https://github.com/RepoDb/RepoDb/blob/master/LICENSE.txt</licenseUrl>
    <repository type="Github" url="https://github.com/RepoDb/RepoDb" />
    <dependencies>
      <group targetFramework=".NETFramework4.5.1" />
      <group targetFramework=".NETStandard1.3">
        <dependency id="NETStandard.Library" version="1.6.1" exclude="Build,Analyzers" />
        <dependency id="System.Data.Common" version="4.3.0" exclude="Build,Analyzers" />
        <dependency id="System.Data.SqlClient" version="4.5.1" exclude="Build,Analyzers" />
        <dependency id="System.Dynamic.Runtime" version="4.3.0" exclude="Build,Analyzers" />
        <dependency id="System.Reflection.Emit" version="4.3.0" exclude="Build,Analyzers" />
        <dependency id="System.Reflection.Emit.Lightweight" version="4.3.0" exclude="Build,Analyzers" />
        <dependency id="System.Reflection.Extensions" version="4.3.0" exclude="Build,Analyzers" />
      </group>
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="Microsoft.CSharp" targetFramework=".NETFramework4.5.1" />
      <frameworkAssembly assemblyName="System.Data" targetFramework=".NETFramework4.5.1" />
      <frameworkAssembly assemblyName="System" targetFramework=".NETFramework4.5.1" />
      <frameworkAssembly assemblyName="System.Xml" targetFramework=".NETFramework4.5.1" />
      <frameworkAssembly assemblyName="System.Xml.Linq" targetFramework=".NETFramework4.5.1" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <file src="readme.txt" target="lib\readme.txt" />
    <file src="lib\**" target="lib\" />
  </files>
</package>